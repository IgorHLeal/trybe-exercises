{"ast":null,"code":"var _jsxFileName = \"/home/igorlealh/dev-trybe/repositorio/trybe-exercises/Front-end/bloco14_testes-automatizados-com-React-Testing-Library/class14.1_RTL-primeiros-passos/testes-react/src/ValidEmail.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst verifyEmail = email => {\n  const emailRegex = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/;\n  return emailRegex.test(email);\n};\n\nconst ValidEmail = props => {\n  const {\n    email\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      \"data-testid\": \"id-email-user\",\n      children: `Valor: ${email}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), email && /*#__PURE__*/_jsxDEV(\"h3\", {\n      \"data-testid\": \"id-is-email-valid\",\n      className: verifyEmail(email) ? 'green' : 'Email Inválido'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ValidEmail;\nValidEmail.propTypes = {\n  email: PropTypes.string.isRequired\n};\nexport default ValidEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidEmail\");","map":{"version":3,"sources":["/home/igorlealh/dev-trybe/repositorio/trybe-exercises/Front-end/bloco14_testes-automatizados-com-React-Testing-Library/class14.1_RTL-primeiros-passos/testes-react/src/ValidEmail.js"],"names":["React","PropTypes","verifyEmail","email","emailRegex","test","ValidEmail","props","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,UAAU,GAAG,yCAAnB;AACA,SAAOA,UAAU,CAACC,IAAX,CAAgBF,KAAhB,CAAP;AACD,CAHD;;AAKA,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEJ,IAAAA;AAAF,MAAYI,KAAlB;AACA,sBACE;AAAA,4BACE;AAAI,qBAAY,eAAhB;AAAA,gBAAkC,UAASJ,KAAM;AAAjD;AAAA;AAAA;AAAA;AAAA,YADF,EAGIA,KAAK,iBACH;AAAI,qBAAY,mBAAhB;AACE,MAAA,SAAS,EAAED,WAAW,CAACC,KAAD,CAAX,GAAqB,OAArB,GAA+B;AAD5C;AAAA;AAAA;AAAA;AAAA,YAJN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAdD;;KAAMG,U;AAgBNA,UAAU,CAACE,SAAX,GAAuB;AACrBL,EAAAA,KAAK,EAAEF,SAAS,CAACQ,MAAV,CAAiBC;AADH,CAAvB;AAIA,eAAeJ,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst verifyEmail = (email) => {\n  const emailRegex = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/;\n  return emailRegex.test(email);\n};\n\nconst ValidEmail = (props) => {\n  const { email } = props;\n  return (\n    <div>\n      <h2 data-testid=\"id-email-user\">{`Valor: ${email}`}</h2>\n      {\n        email && (\n          <h3 data-testid=\"id-is-email-valid\"\n            className={verifyEmail(email) ? 'green' : 'Email Inválido'}>\n          </h3>\n        )\n      }\n    </div>\n  );\n};\n\nValidEmail.propTypes = {\n  email: PropTypes.string.isRequired,\n};\n\nexport default ValidEmail;"]},"metadata":{},"sourceType":"module"}