{"ast":null,"code":"var _jsxFileName = \"/home/igorlealh/dev-trybe/repositorio/trybe-exercises/Front-end/bloco14_testes-automatizados-com-React-Testing-Library/class14.1_RTL-primeiros-passos/exercise-todo-list/src/InputTodo.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputTodo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textTodo: ''\n    };\n    this.changeTextTodo = this.changeTextTodo.bind(this);\n  }\n\n  changeTextTodo(value) {\n    this.setState({\n      textTodo: value\n    });\n  }\n\n  addItem(value, callback) {\n    this.setState({\n      textTodo: ''\n    });\n    callback(value);\n  }\n\n  render() {\n    const {\n      addTodo\n    } = this.props;\n    const {\n      textTodo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InputTodo\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputTodo\",\n        children: [\"Tarefa:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"inputTodo\",\n          type: \"text\",\n          value: textTodo,\n          onChange: e => this.changeTextTodo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"btnAdd\",\n        type: \"button\",\n        value: \"Adicionar\",\n        onClick: () => this.addItem(textTodo, addTodo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default InputTodo;\nInputTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/igorlealh/dev-trybe/repositorio/trybe-exercises/Front-end/bloco14_testes-automatizados-com-React-Testing-Library/class14.1_RTL-primeiros-passos/exercise-todo-list/src/InputTodo.js"],"names":["React","Component","PropTypes","InputTodo","constructor","props","state","textTodo","changeTextTodo","bind","value","setState","addItem","callback","render","addTodo","e","target","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAIA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,CAACE,KAAD,EAAQ;AACpB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAEG;AAAZ,KAAd;AACD;;AAEDE,EAAAA,OAAO,CAACF,KAAD,EAAQG,QAAR,EAAkB;AACvB,SAAKF,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACAM,IAAAA,QAAQ,CAACH,KAAD,CAAR;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKV,KAAzB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA,2CAEE;AACE,UAAA,EAAE,EAAC,WADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAGC,QAHV;AAIE,UAAA,QAAQ,EAAIS,CAAD,IAAO,KAAKR,cAAL,CAAoBQ,CAAC,CAACC,MAAF,CAASP,KAA7B;AAJpB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AACE,QAAA,EAAE,EAAC,QADL;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAC,WAHR;AAIE,QAAA,OAAO,EAAG,MAAM,KAAKE,OAAL,CAAaL,QAAb,EAAuBQ,OAAvB;AAJlB;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAzC+B;;AA2ClC,eAAeZ,SAAf;AAEAA,SAAS,CAACe,SAAV,GAAsB;AACpBH,EAAAA,OAAO,EAAEb,SAAS,CAACiB,IAAV,CAAeC;AADJ,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputTodo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textTodo: '',\n    };\n\n    this.changeTextTodo = this.changeTextTodo.bind(this);\n  }\n\n  changeTextTodo(value) {\n    this.setState({ textTodo: value });\n  }\n\n  addItem(value, callback) {\n    this.setState({ textTodo: '' });\n    callback(value);\n  }\n\n  render() {\n    const { addTodo } = this.props;\n    const { textTodo } = this.state;\n    return (\n      <div className=\"InputTodo\">\n        <label htmlFor=\"inputTodo\">\n          Tarefa:\n          <input\n            id=\"inputTodo\"\n            type=\"text\"\n            value={ textTodo }\n            onChange={ (e) => this.changeTextTodo(e.target.value) }\n          />\n        </label>\n        <input\n          id=\"btnAdd\"\n          type=\"button\"\n          value=\"Adicionar\"\n          onClick={ () => this.addItem(textTodo, addTodo) }\n        />\n      </div>\n    );\n  }\n}\nexport default InputTodo;\n\nInputTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}