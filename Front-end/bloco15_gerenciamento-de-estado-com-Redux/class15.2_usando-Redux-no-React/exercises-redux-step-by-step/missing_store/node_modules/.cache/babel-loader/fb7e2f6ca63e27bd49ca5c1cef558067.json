{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/igorlealh/dev-trybe/repositorio/trybe-exercises/Front-end/bloco15_gerenciamento-de-estado-com-Redux/class15.2_usando-Redux-no-React/exercises-redux-step-by-step/missing_store/src/components/Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { checkQuiz } from '../actions';\n\nclass Quiz extends React.Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      century: '',\n      city: '',\n      quantity: '',\n      ingredients: []\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      ingredients\n    } = this.state;\n    const value = target.getAttribute('data-name');\n    const id = target.getAttribute('data-id');\n\n    if (id && target.checked === true) {\n      this.setState({\n        ingredients: [...ingredients, value]\n      });\n    } else if (id && target.checked === false) {\n      const newIngredients = [...ingredients];\n      const elementIndex = newIngredients.indexOf(target.name);\n      newIngredients.splice(elementIndex, 1);\n      this.setState({\n        ingredients: newIngredients\n      });\n    }\n\n    this.setState({\n      [target.name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const {\n      sendAnswers\n    } = this.props;\n    const {\n      century,\n      city,\n      quantity,\n      ingredients\n    } = this.state;\n    const myAnswers = {\n      century,\n      city,\n      quantity,\n      ingredients\n    };\n    sendAnswers(myAnswers);\n    this.createCenturyInput = this.createCenturyInput.bind(this);\n    this.createCityInput = this.createCityInput.bind(this);\n    this.createIngredientInput = this.createIngredientInput.bind(this);\n    this.createQuantityInput = this.createQuantityInput.bind(this);\n  }\n\n  getLasagnaData() {\n    const centuryXVI = 16;\n    const centuryXVII = 17;\n    const centuryXVIII = 18;\n    const centuryXIX = 19;\n    const centuryXX = 20;\n    return {\n      centuriesLasagna: [centuryXX, centuryXIX, centuryXVII, centuryXVIII, centuryXVI],\n      citiesLasagna: ['Nápoles', 'Bolonha', 'Sorrento', 'Palermo', 'Bérgamo'],\n      ingredients: ['presunto', 'massa sem ovos', 'queijo mussarela', 'ragu de carne', 'carne moída', 'molho bechamel', 'queijo parmesão', 'massa com ovos e espinafre'],\n      layersLasagna: ['3 a 4', '2 a 3', '4 a 5', '5 a 6', '1 a 2']\n    };\n  }\n\n  createFinalButton() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonFinal d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-outline-light\",\n        children: \"Tudo parece gostoso quando voc\\xEA est\\xE1 de dieta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n  createCenturyInput(century) {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"century\",\n      className: \"form-check-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-name\": century,\n        onChange: this.handleChange,\n        className: \"form-check-input\",\n        name: \"century\",\n        type: \"radio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), century]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n  createCityInput(city) {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"city\",\n      className: \"form-check-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-name\": city,\n        onChange: this.handleChange,\n        className: \"form-check-input\",\n        name: \"city\",\n        type: \"radio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n  createIngredientInput(ingredient, index) {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: ingredient,\n      className: \"form-check-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-name\": ingredient,\n        \"data-id\": \"ingredients\",\n        onChange: this.handleChange,\n        className: \"form-check-input\",\n        name: ingredient,\n        type: \"checkbox\"\n      }, `${index}input`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), ingredient]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n  createQuantityInput(quantity) {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"quantity\",\n      className: \"form-check-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-name\": quantity,\n        onChange: this.handleChange,\n        className: \"form-check-input\",\n        name: \"quantity\",\n        type: \"radio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), quantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const {\n      centuriesLasagna,\n      citiesLasagna,\n      ingredients,\n      layersLasagna\n    } = this.getLasagnaData();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz d-flex flex-column aling-items-center justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"text-light\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Em que s\\xE9culo surgiu a lasanha Bolonhesa?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), centuriesLasagna.map(century => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: this.createCenturyInput(century)\n          }, `${century}div`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Em que cidade foi criada a lasanha Bolonhesa?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), citiesLasagna.map(city => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: this.createCityInput(city)\n          }, `${city}div`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Quais os 4 ingredientes principais de uma verdadeira lasanha Bolonhesa?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: this.createIngredientInput(ingredient, index)\n          }, `${index}div`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Quantas camadas de massa s\\xE3o necess\\xE1rias para uma boa lasanha?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), layersLasagna.map((quantity, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: this.createQuantityInput(quantity)\n          }, `${index}div`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), this.createFinalButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  sendAnswers: answers => dispatch(checkQuiz(answers))\n});\n\nQuiz.propTypes = {\n  sendAnswers: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(Quiz);","map":{"version":3,"sources":["/home/igorlealh/dev-trybe/repositorio/trybe-exercises/Front-end/bloco15_gerenciamento-de-estado-com-Redux/class15.2_usando-Redux-no-React/exercises-redux-step-by-step/missing_store/src/components/Quiz.js"],"names":["React","PropTypes","connect","checkQuiz","Quiz","Component","constructor","handleChange","bind","handleSubmit","state","century","city","quantity","ingredients","target","value","getAttribute","id","checked","setState","newIngredients","elementIndex","indexOf","name","splice","event","preventDefault","sendAnswers","props","myAnswers","createCenturyInput","createCityInput","createIngredientInput","createQuantityInput","getLasagnaData","centuryXVI","centuryXVII","centuryXVIII","centuryXIX","centuryXX","centuriesLasagna","citiesLasagna","layersLasagna","createFinalButton","ingredient","index","render","map","mapDispatchToProps","dispatch","answers","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { checkQuiz } from '../actions';\n\nclass Quiz extends React.Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      century: '',\n      city: '',\n      quantity: '',\n      ingredients: [],\n    };\n  }\n\n  handleChange({ target }) {\n    const { ingredients } = this.state;\n    const value = target.getAttribute('data-name');\n    const id = target.getAttribute('data-id');\n    if (id && target.checked === true) {\n      this.setState({ ingredients: [...ingredients, value] });\n    } else if (id && target.checked === false) {\n      const newIngredients = [...ingredients];\n      const elementIndex = newIngredients.indexOf(target.name);\n      newIngredients.splice(elementIndex, 1);\n      this.setState({ ingredients: newIngredients });\n    }\n    this.setState({ [target.name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { sendAnswers } = this.props;\n    const { century, city, quantity, ingredients } = this.state;\n    const myAnswers = {\n      century,\n      city,\n      quantity,\n      ingredients,\n    };\n    sendAnswers(myAnswers);\n\n    this.createCenturyInput = this.createCenturyInput.bind(this);\n    this.createCityInput = this.createCityInput.bind(this);\n    this.createIngredientInput = this.createIngredientInput.bind(this);\n    this.createQuantityInput = this.createQuantityInput.bind(this);\n  }\n\n  getLasagnaData() {\n    const centuryXVI = 16;\n    const centuryXVII = 17;\n    const centuryXVIII = 18;\n    const centuryXIX = 19;\n    const centuryXX = 20;\n    return {\n      centuriesLasagna: [centuryXX, centuryXIX, centuryXVII, centuryXVIII, centuryXVI],\n      citiesLasagna: ['Nápoles', 'Bolonha', 'Sorrento', 'Palermo', 'Bérgamo'],\n      ingredients: ['presunto', 'massa sem ovos',\n        'queijo mussarela', 'ragu de carne', 'carne moída',\n        'molho bechamel', 'queijo parmesão', 'massa com ovos e espinafre'],\n      layersLasagna: ['3 a 4', '2 a 3', '4 a 5', '5 a 6', '1 a 2'],\n    };\n  }\n\n  createFinalButton() {\n    return (\n      <div className=\"buttonFinal d-flex justify-content-center\">\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-light\"\n        >\n          Tudo parece gostoso quando você está de dieta\n        </button>\n      </div>\n    );\n  }\n\n  createCenturyInput(century) {\n    return (\n      <label htmlFor=\"century\" className=\"form-check-label\">\n        <input\n          data-name={ century }\n          onChange={ this.handleChange }\n          className=\"form-check-input\"\n          name=\"century\"\n          type=\"radio\"\n        />\n        { century }\n      </label>\n    );\n  }\n\n  createCityInput(city) {\n    return (\n      <label htmlFor=\"city\" className=\"form-check-label\">\n        <input\n          data-name={ city }\n          onChange={ this.handleChange }\n          className=\"form-check-input\"\n          name=\"city\"\n          type=\"radio\"\n        />\n        { city }\n      </label>\n    );\n  }\n\n  createIngredientInput(ingredient, index) {\n    return (\n      <label htmlFor={ ingredient } className=\"form-check-label\">\n        <input\n          key={ `${index}input` }\n          data-name={ ingredient }\n          data-id=\"ingredients\"\n          onChange={ this.handleChange }\n          className=\"form-check-input\"\n          name={ ingredient }\n          type=\"checkbox\"\n        />\n        { ingredient }\n      </label>\n    );\n  }\n\n  createQuantityInput(quantity) {\n    return (\n      <label htmlFor=\"quantity\" className=\"form-check-label\">\n        <input\n          data-name={ quantity }\n          onChange={ this.handleChange }\n          className=\"form-check-input\"\n          name=\"quantity\"\n          type=\"radio\"\n        />\n        { quantity }\n      </label>\n    );\n  }\n\n  render() {\n    const { centuriesLasagna, citiesLasagna,\n      ingredients, layersLasagna } = this.getLasagnaData();\n    return (\n      <div className=\"quiz d-flex flex-column aling-items-center justify-content-center\">\n        <form className=\"text-light\" onSubmit={ this.handleSubmit }>\n          <div>\n            <span>Em que século surgiu a lasanha Bolonhesa?</span>\n            { centuriesLasagna.map((century) => (\n              <div key={ `${century}div` } className=\"form-check\">\n                {this.createCenturyInput(century)}\n              </div>\n            ))}\n          </div>\n          <div>\n            <span>Em que cidade foi criada a lasanha Bolonhesa?</span>\n            { citiesLasagna.map((city) => (\n              <div key={ `${city}div` } className=\"form-check\">\n                {this.createCityInput(city)}\n              </div>\n            ))}\n          </div>\n          <div>\n            <span>\n              Quais os 4 ingredientes principais de uma verdadeira lasanha Bolonhesa?\n            </span>\n            { ingredients.map((ingredient, index) => (\n              <div key={ `${index}div` } className=\"form-check\">\n                {this.createIngredientInput(ingredient, index)}\n              </div>\n            ))}\n          </div>\n          <div>\n            <span>Quantas camadas de massa são necessárias para uma boa lasanha?</span>\n            { layersLasagna.map((quantity, index) => (\n              <div key={ `${index}div` } className=\"form-check\">\n                {this.createQuantityInput(quantity)}\n              </div>\n            ))}\n          </div>\n          {this.createFinalButton()}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendAnswers: (answers) => dispatch(checkQuiz(answers)),\n});\n\nQuiz.propTypes = {\n  sendAnswers: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Quiz);\n"]},"metadata":{},"sourceType":"module"}