{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/igorlealh/dev-trybe/repositorio/trybe-exercises/Front-end/bloco15_gerenciamento-de-estado-com-Redux/class15.2_usando-Redux-no-React/exercises-redux-step-by-step/missing_store/src/components/Score.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport garfieldLasagna from '../imgs/garfieldLasagna.png';\n\nclass Score extends React.Component {\n  render() {\n    const {\n      receiveScore\n    } = this.props;\n    const {\n      century,\n      city,\n      quantity,\n      ingredients = []\n    } = receiveScore;\n    const setIngredients = new Set(ingredients.sort());\n    const newIngredientsArray = [...setIngredients];\n    const rightAnswers = {\n      century: 20,\n      city: 'Bolonha',\n      quantity: '4 a 5',\n      ingredients: ['ragu de carne', 'molho bechamel', 'queijo parmesão', 'massa com ovos e espinafre']\n    };\n    const TWENTY_FIVE_PERCENT = 25;\n    const ZERO_PERCENT = 0;\n    const centuryPoints = Number(century) === rightAnswers.century ? TWENTY_FIVE_PERCENT : ZERO_PERCENT;\n    const cityPoints = city === rightAnswers.city ? TWENTY_FIVE_PERCENT : ZERO_PERCENT;\n    const quantityPoints = quantity === rightAnswers.quantity ? TWENTY_FIVE_PERCENT : ZERO_PERCENT;\n    const ingredientsPoints = JSON.stringify(newIngredientsArray) === JSON.stringify(rightAnswers.ingredients.sort()) ? TWENTY_FIVE_PERCENT : ZERO_PERCENT;\n    const sumTotal = centuryPoints + quantityPoints + cityPoints + ingredientsPoints;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score d-flex flex-column align-items-center justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"banzai\",\n        children: \"Baaaaaaaaaaaanzai!!!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: garfieldLasagna,\n        width: \"60%\",\n        alt: \"Garfield e Lasanha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: sumTotal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  receiveScore: state.answersFound.answers\n});\n\nScore.propTypes = {\n  receiveScore: PropTypes.shape({\n    century: PropTypes.string,\n    city: PropTypes.string,\n    quantity: PropTypes.string,\n    ingredients: PropTypes.arrayOf(PropTypes.string)\n  })\n};\nScore.defaultProps = {\n  receiveScore: {}\n};\nexport default connect(mapStateToProps, null)(Score);","map":{"version":3,"sources":["/home/igorlealh/dev-trybe/repositorio/trybe-exercises/Front-end/bloco15_gerenciamento-de-estado-com-Redux/class15.2_usando-Redux-no-React/exercises-redux-step-by-step/missing_store/src/components/Score.js"],"names":["React","connect","PropTypes","garfieldLasagna","Score","Component","render","receiveScore","props","century","city","quantity","ingredients","setIngredients","Set","sort","newIngredientsArray","rightAnswers","TWENTY_FIVE_PERCENT","ZERO_PERCENT","centuryPoints","Number","cityPoints","quantityPoints","ingredientsPoints","JSON","stringify","sumTotal","mapStateToProps","state","answersFound","answers","propTypes","shape","string","arrayOf","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAClCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;AACA,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA,QAAjB;AAA2BC,MAAAA,WAAW,GAAG;AAAzC,QAAgDL,YAAtD;AACA,UAAMM,cAAc,GAAG,IAAIC,GAAJ,CAAQF,WAAW,CAACG,IAAZ,EAAR,CAAvB;AACA,UAAMC,mBAAmB,GAAG,CAAC,GAAGH,cAAJ,CAA5B;AACA,UAAMI,YAAY,GAAG;AAAER,MAAAA,OAAO,EAAE,EAAX;AACnBC,MAAAA,IAAI,EAAE,SADa;AAEnBC,MAAAA,QAAQ,EAAE,OAFS;AAGnBC,MAAAA,WAAW,EACX,CAAC,eAAD,EAAkB,gBAAlB,EACE,iBADF,EACqB,4BADrB;AAJmB,KAArB;AAOA,UAAMM,mBAAmB,GAAG,EAA5B;AACA,UAAMC,YAAY,GAAG,CAArB;AACA,UAAMC,aAAa,GAAGC,MAAM,CAACZ,OAAD,CAAN,KAAoBQ,YAAY,CAACR,OAAjC,GAClBS,mBADkB,GAElBC,YAFJ;AAGA,UAAMG,UAAU,GAAGZ,IAAI,KAAKO,YAAY,CAACP,IAAtB,GACfQ,mBADe,GAEfC,YAFJ;AAGA,UAAMI,cAAc,GAAGZ,QAAQ,KAAKM,YAAY,CAACN,QAA1B,GACnBO,mBADmB,GAEnBC,YAFJ;AAGA,UAAMK,iBAAiB,GAAGC,IAAI,CAACC,SAAL,CAAeV,mBAAf,MAAwCS,IAAI,CAACC,SAAL,CAChET,YAAY,CAACL,WAAb,CAAyBG,IAAzB,EADgE,CAAxC,GAEtBG,mBAFsB,GAEAC,YAF1B;AAGA,UAAMQ,QAAQ,GAAGP,aAAa,GAAGG,cAAhB,GAAiCD,UAAjC,GAA8CE,iBAA/D;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,oEAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAGrB,eAAX;AAA6B,QAAA,KAAK,EAAC,KAAnC;AAAyC,QAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAKwB;AAAL;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AApCiC;;AAuCpC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCtB,EAAAA,YAAY,EAAEsB,KAAK,CAACC,YAAN,CAAmBC;AADC,CAAZ,CAAxB;;AAIA3B,KAAK,CAAC4B,SAAN,GAAkB;AAChBzB,EAAAA,YAAY,EAAEL,SAAS,CAAC+B,KAAV,CAAgB;AAC5BxB,IAAAA,OAAO,EAAEP,SAAS,CAACgC,MADS;AAE5BxB,IAAAA,IAAI,EAAER,SAAS,CAACgC,MAFY;AAG5BvB,IAAAA,QAAQ,EAAET,SAAS,CAACgC,MAHQ;AAI5BtB,IAAAA,WAAW,EAAEV,SAAS,CAACiC,OAAV,CAAkBjC,SAAS,CAACgC,MAA5B;AAJe,GAAhB;AADE,CAAlB;AASA9B,KAAK,CAACgC,YAAN,GAAqB;AACnB7B,EAAAA,YAAY,EAAE;AADK,CAArB;AAIA,eAAeN,OAAO,CAAC2B,eAAD,EAAkB,IAAlB,CAAP,CAA+BxB,KAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport garfieldLasagna from '../imgs/garfieldLasagna.png';\n\nclass Score extends React.Component {\n  render() {\n    const { receiveScore } = this.props;\n    const { century, city, quantity, ingredients = [] } = receiveScore;\n    const setIngredients = new Set(ingredients.sort());\n    const newIngredientsArray = [...setIngredients];\n    const rightAnswers = { century: 20,\n      city: 'Bolonha',\n      quantity: '4 a 5',\n      ingredients:\n      ['ragu de carne', 'molho bechamel',\n        'queijo parmesão', 'massa com ovos e espinafre'],\n    };\n    const TWENTY_FIVE_PERCENT = 25;\n    const ZERO_PERCENT = 0;\n    const centuryPoints = Number(century) === rightAnswers.century\n      ? TWENTY_FIVE_PERCENT\n      : ZERO_PERCENT;\n    const cityPoints = city === rightAnswers.city\n      ? TWENTY_FIVE_PERCENT\n      : ZERO_PERCENT;\n    const quantityPoints = quantity === rightAnswers.quantity\n      ? TWENTY_FIVE_PERCENT\n      : ZERO_PERCENT;\n    const ingredientsPoints = JSON.stringify(newIngredientsArray) === JSON.stringify(\n      rightAnswers.ingredients.sort(),\n    ) ? TWENTY_FIVE_PERCENT : ZERO_PERCENT;\n    const sumTotal = centuryPoints + quantityPoints + cityPoints + ingredientsPoints;\n\n    return (\n      <div className=\"score d-flex flex-column align-items-center justify-content-center\">\n        <p className=\"banzai\">Baaaaaaaaaaaanzai!!!!!</p>\n        <img src={ garfieldLasagna } width=\"60%\" alt=\"Garfield e Lasanha\" />\n        <p>{ sumTotal }</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  receiveScore: state.answersFound.answers,\n});\n\nScore.propTypes = {\n  receiveScore: PropTypes.shape({\n    century: PropTypes.string,\n    city: PropTypes.string,\n    quantity: PropTypes.string,\n    ingredients: PropTypes.arrayOf(PropTypes.string),\n  }),\n};\n\nScore.defaultProps = {\n  receiveScore: {},\n};\n\nexport default connect(mapStateToProps, null)(Score);\n"]},"metadata":{},"sourceType":"module"}