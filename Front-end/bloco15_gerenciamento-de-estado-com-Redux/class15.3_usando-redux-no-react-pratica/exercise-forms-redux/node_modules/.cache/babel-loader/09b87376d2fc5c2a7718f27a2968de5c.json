{"ast":null,"code":"var _jsxFileName = \"/home/igorlealh/dev-trybe/repositorio/trybe-exercises/Front-end/bloco15_gerenciamento-de-estado-com-Redux/class15.3_usando-redux-no-react-pratica/exercise-forms-redux/src/pages/PersonalForm.jsx\";\nimport React, { Component } from 'react';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Select from '../components/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PersonalForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nome: '',\n      email: '',\n      cpf: '',\n      endereco: '',\n      cidade: '',\n      estado: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const {\n      nome,\n      email,\n      cpf,\n      endereco,\n      cidade,\n      estado\n    } = this.state;\n    const states = ['Rio de Janeiro', 'Minas Gerais', 'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"nome: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: nome,\n        name: \"nome\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"email: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: email,\n        name: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"cpf: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: cpf,\n        name: \"cpf\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"endereco: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: endereco,\n        name: \"endereco\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"cidade: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        name: \"cidade\",\n        value: cidade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultOption: \"Selecione\",\n        onChange: this.handleChange,\n        value: estado,\n        label: \"Estado: \",\n        id: \"estado\",\n        name: \"estado\",\n        options: states\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        label: \"Enviar\",\n        onClick: () => console.log('Ao clicar, envie a informação do formulário')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PersonalForm;","map":{"version":3,"sources":["/home/igorlealh/dev-trybe/repositorio/trybe-exercises/Front-end/bloco15_gerenciamento-de-estado-com-Redux/class15.3_usando-redux-no-react-pratica/exercise-forms-redux/src/pages/PersonalForm.jsx"],"names":["React","Component","Input","Button","Select","PersonalForm","constructor","state","nome","email","cpf","endereco","cidade","estado","handleChange","bind","target","name","value","setState","render","states","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Select from '../components/Select';\n\nclass PersonalForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      nome: '',\n      email: '',\n      cpf: '',\n      endereco: '',\n      cidade: '',\n      estado: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { nome, email, cpf, endereco, cidade, estado } = this.state;\n    const states = [\n      'Rio de Janeiro',\n      'Minas Gerais',\n      'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n    return (\n      <fieldset>\n        <Input\n          label=\"nome: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ nome }\n          name=\"nome\"\n          required\n        />\n        <Input\n          label=\"email: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ email }\n          name=\"email\"\n          required\n        />\n        <Input\n          label=\"cpf: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ cpf }\n          name=\"cpf\"\n          required\n        />\n        <Input\n          label=\"endereco: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ endereco }\n          name=\"endereco\"\n          required\n        />\n        <Input\n          label=\"cidade: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          name=\"cidade\"\n          value={ cidade }\n        />\n        <Select\n          defaultOption=\"Selecione\"\n          onChange={ this.handleChange }\n          value={ estado }\n          label=\"Estado: \"\n          id=\"estado\"\n          name=\"estado\"\n          options={ states }\n        />\n        <Button\n          type=\"button\"\n          label=\"Enviar\"\n          onClick={ () => console.log('Ao clicar, envie a informação do formulário') }\n        />\n      </fieldset>\n    );\n  }\n}\n\nexport default PersonalForm;\n"]},"metadata":{},"sourceType":"module"}